// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ChatProtocol_v3.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Chat.Protocol {

  /// <summary>Holder for reflection information generated from ChatProtocol_v3.proto</summary>
  public static partial class ChatProtocolV3Reflection {

    #region Descriptor
    /// <summary>File descriptor for ChatProtocol_v3.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ChatProtocolV3Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVDaGF0UHJvdG9jb2xfdjMucHJvdG8SDWNoYXQucHJvdG9jb2wiVAoIVm9s",
            "dW50YXISCgoCaWQYASABKAUSDAoEbnVtZRgCIAEoCRIPCgdwcmVudW1lGAMg",
            "ASgJEg0KBWVtYWlsGAQgASgJEg4KBnBhc3N3ZBgFIAEoCSI2CgxDYXpDYXJp",
            "dGFiaWwSCgoCaWQYASABKAUSDAoEbnVtZRgCIAEoCRIMCgRzdW1hGAMgASgF",
            "IlAKB0RvbmF0b3ISCgoCaWQYASABKAUSDAoEbnVtZRgCIAEoCRIPCgdwcmVu",
            "dW1lGAMgASgJEg4KBmFkcmVzYRgEIAEoCRIKCgJuchgFIAEoAiJyCgdEb25h",
            "dGllEgoKAmlkGAEgASgFEigKA2NhehgCIAEoCzIbLmNoYXQucHJvdG9jb2wu",
            "Q2F6Q2FyaXRhYmlsEiMKA2RvbhgDIAEoCzIWLmNoYXQucHJvdG9jb2wuRG9u",
            "YXRvchIMCgRzdW1hGAQgASgFIukCCgtDaGF0UmVxdWVzdBItCgR0eXBlGAEg",
            "ASgOMh8uY2hhdC5wcm90b2NvbC5DaGF0UmVxdWVzdC5UeXBlEikKCHZvbHVu",
            "dGFyGAIgAygLMhcuY2hhdC5wcm90b2NvbC5Wb2x1bnRhchInCgdkb25hdGll",
            "GAMgASgLMhYuY2hhdC5wcm90b2NvbC5Eb25hdGllEicKB2RvbmF0b3IYBCAB",
            "KAsyFi5jaGF0LnByb3RvY29sLkRvbmF0b3ISDAoEdGV4dBgFIAEoCSKfAQoE",
            "VHlwZRIKCgZVbmtvd24QABIJCgVMb2dpbhABEgoKBkxvZ291dBACEg0KCUdl",
            "dENhenVyaRADEg8KC0dldERvbmF0b3JpEAQSEQoNU2VhcmNoRG9uYXRvchAF",
            "EhIKDkdldERhdGVEb25hdG9yEAYSDwoLU2F2ZURvbmF0b3IQBxIPCgtTYXZl",
            "RG9uYXRpZRAIEgsKB1JlZnJlc2gQCSLEAwoMQ2hhdFJlc3BvbnNlEi4KBHR5",
            "cGUYASABKA4yIC5jaGF0LnByb3RvY29sLkNoYXRSZXNwb25zZS5UeXBlEg0K",
            "BWVycm9yGAIgASgJEikKCHZvbHVudGFyGAMgAygLMhcuY2hhdC5wcm90b2Nv",
            "bC5Wb2x1bnRhchInCgdkb25hdG9yGAQgAygLMhYuY2hhdC5wcm90b2NvbC5E",
            "b25hdG9yEicKB2RvbmF0aWUYBSABKAsyFi5jaGF0LnByb3RvY29sLkRvbmF0",
            "aWUSKwoGY2F6dXJpGAYgAygLMhsuY2hhdC5wcm90b2NvbC5DYXpDYXJpdGFi",
            "aWwSDAoEdGV4dBgHIAEoCSK8AQoEVHlwZRILCgdVbmtub3duEAASBgoCT2sQ",
            "ARIJCgVFcnJvchACEgoKBlVwZGF0ZRADEg4KCk5ld0RvbmF0aWUQBBIOCgpO",
            "ZXdEb25hdG9yEAUSCwoHUmVmcmVzaBAGEg0KCUdldENhenVyaRAHEg8KC0dl",
            "dERvbmF0b3JpEAgSDgoKR2V0RG9uYXRvchAJEg4KCkdldE51bWVEb24QChIK",
            "CgZMb2dvdXQQCxIPCgtTYXZlRG9uYXRvchAMQh4KDXByb3RvUHJvdG9jb2xC",
            "DUNoYXRQcm90b2J1ZnNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Chat.Protocol.Voluntar), global::Chat.Protocol.Voluntar.Parser, new[]{ "Id", "Nume", "Prenume", "Email", "Passwd" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chat.Protocol.CazCaritabil), global::Chat.Protocol.CazCaritabil.Parser, new[]{ "Id", "Nume", "Suma" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chat.Protocol.Donator), global::Chat.Protocol.Donator.Parser, new[]{ "Id", "Nume", "Prenume", "Adresa", "Nr" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chat.Protocol.Donatie), global::Chat.Protocol.Donatie.Parser, new[]{ "Id", "Caz", "Don", "Suma" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chat.Protocol.ChatRequest), global::Chat.Protocol.ChatRequest.Parser, new[]{ "Type", "Voluntar", "Donatie", "Donator", "Text" }, null, new[]{ typeof(global::Chat.Protocol.ChatRequest.Types.Type) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chat.Protocol.ChatResponse), global::Chat.Protocol.ChatResponse.Parser, new[]{ "Type", "Error", "Voluntar", "Donator", "Donatie", "Cazuri", "Text" }, null, new[]{ typeof(global::Chat.Protocol.ChatResponse.Types.Type) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Voluntar : pb::IMessage<Voluntar> {
    private static readonly pb::MessageParser<Voluntar> _parser = new pb::MessageParser<Voluntar>(() => new Voluntar());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Voluntar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chat.Protocol.ChatProtocolV3Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Voluntar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Voluntar(Voluntar other) : this() {
      id_ = other.id_;
      nume_ = other.nume_;
      prenume_ = other.prenume_;
      email_ = other.email_;
      passwd_ = other.passwd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Voluntar Clone() {
      return new Voluntar(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "nume" field.</summary>
    public const int NumeFieldNumber = 2;
    private string nume_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nume {
      get { return nume_; }
      set {
        nume_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "prenume" field.</summary>
    public const int PrenumeFieldNumber = 3;
    private string prenume_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Prenume {
      get { return prenume_; }
      set {
        prenume_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 4;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "passwd" field.</summary>
    public const int PasswdFieldNumber = 5;
    private string passwd_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Passwd {
      get { return passwd_; }
      set {
        passwd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Voluntar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Voluntar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Nume != other.Nume) return false;
      if (Prenume != other.Prenume) return false;
      if (Email != other.Email) return false;
      if (Passwd != other.Passwd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Nume.Length != 0) hash ^= Nume.GetHashCode();
      if (Prenume.Length != 0) hash ^= Prenume.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (Passwd.Length != 0) hash ^= Passwd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Nume.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Nume);
      }
      if (Prenume.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Prenume);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Email);
      }
      if (Passwd.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Passwd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Nume.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nume);
      }
      if (Prenume.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Prenume);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (Passwd.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Passwd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Voluntar other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Nume.Length != 0) {
        Nume = other.Nume;
      }
      if (other.Prenume.Length != 0) {
        Prenume = other.Prenume;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.Passwd.Length != 0) {
        Passwd = other.Passwd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Nume = input.ReadString();
            break;
          }
          case 26: {
            Prenume = input.ReadString();
            break;
          }
          case 34: {
            Email = input.ReadString();
            break;
          }
          case 42: {
            Passwd = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CazCaritabil : pb::IMessage<CazCaritabil> {
    private static readonly pb::MessageParser<CazCaritabil> _parser = new pb::MessageParser<CazCaritabil>(() => new CazCaritabil());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CazCaritabil> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chat.Protocol.ChatProtocolV3Reflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CazCaritabil() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CazCaritabil(CazCaritabil other) : this() {
      id_ = other.id_;
      nume_ = other.nume_;
      suma_ = other.suma_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CazCaritabil Clone() {
      return new CazCaritabil(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "nume" field.</summary>
    public const int NumeFieldNumber = 2;
    private string nume_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nume {
      get { return nume_; }
      set {
        nume_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "suma" field.</summary>
    public const int SumaFieldNumber = 3;
    private int suma_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Suma {
      get { return suma_; }
      set {
        suma_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CazCaritabil);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CazCaritabil other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Nume != other.Nume) return false;
      if (Suma != other.Suma) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Nume.Length != 0) hash ^= Nume.GetHashCode();
      if (Suma != 0) hash ^= Suma.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Nume.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Nume);
      }
      if (Suma != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Suma);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Nume.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nume);
      }
      if (Suma != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Suma);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CazCaritabil other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Nume.Length != 0) {
        Nume = other.Nume;
      }
      if (other.Suma != 0) {
        Suma = other.Suma;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Nume = input.ReadString();
            break;
          }
          case 24: {
            Suma = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Donator : pb::IMessage<Donator> {
    private static readonly pb::MessageParser<Donator> _parser = new pb::MessageParser<Donator>(() => new Donator());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Donator> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chat.Protocol.ChatProtocolV3Reflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Donator() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Donator(Donator other) : this() {
      id_ = other.id_;
      nume_ = other.nume_;
      prenume_ = other.prenume_;
      adresa_ = other.adresa_;
      nr_ = other.nr_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Donator Clone() {
      return new Donator(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "nume" field.</summary>
    public const int NumeFieldNumber = 2;
    private string nume_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nume {
      get { return nume_; }
      set {
        nume_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "prenume" field.</summary>
    public const int PrenumeFieldNumber = 3;
    private string prenume_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Prenume {
      get { return prenume_; }
      set {
        prenume_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "adresa" field.</summary>
    public const int AdresaFieldNumber = 4;
    private string adresa_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Adresa {
      get { return adresa_; }
      set {
        adresa_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nr" field.</summary>
    public const int NrFieldNumber = 5;
    private float nr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Nr {
      get { return nr_; }
      set {
        nr_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Donator);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Donator other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Nume != other.Nume) return false;
      if (Prenume != other.Prenume) return false;
      if (Adresa != other.Adresa) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Nr, other.Nr)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Nume.Length != 0) hash ^= Nume.GetHashCode();
      if (Prenume.Length != 0) hash ^= Prenume.GetHashCode();
      if (Adresa.Length != 0) hash ^= Adresa.GetHashCode();
      if (Nr != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Nr);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Nume.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Nume);
      }
      if (Prenume.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Prenume);
      }
      if (Adresa.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Adresa);
      }
      if (Nr != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Nr);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Nume.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nume);
      }
      if (Prenume.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Prenume);
      }
      if (Adresa.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Adresa);
      }
      if (Nr != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Donator other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Nume.Length != 0) {
        Nume = other.Nume;
      }
      if (other.Prenume.Length != 0) {
        Prenume = other.Prenume;
      }
      if (other.Adresa.Length != 0) {
        Adresa = other.Adresa;
      }
      if (other.Nr != 0F) {
        Nr = other.Nr;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Nume = input.ReadString();
            break;
          }
          case 26: {
            Prenume = input.ReadString();
            break;
          }
          case 34: {
            Adresa = input.ReadString();
            break;
          }
          case 45: {
            Nr = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Donatie : pb::IMessage<Donatie> {
    private static readonly pb::MessageParser<Donatie> _parser = new pb::MessageParser<Donatie>(() => new Donatie());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Donatie> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chat.Protocol.ChatProtocolV3Reflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Donatie() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Donatie(Donatie other) : this() {
      id_ = other.id_;
      caz_ = other.caz_ != null ? other.caz_.Clone() : null;
      don_ = other.don_ != null ? other.don_.Clone() : null;
      suma_ = other.suma_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Donatie Clone() {
      return new Donatie(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "caz" field.</summary>
    public const int CazFieldNumber = 2;
    private global::Chat.Protocol.CazCaritabil caz_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Chat.Protocol.CazCaritabil Caz {
      get { return caz_; }
      set {
        caz_ = value;
      }
    }

    /// <summary>Field number for the "don" field.</summary>
    public const int DonFieldNumber = 3;
    private global::Chat.Protocol.Donator don_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Chat.Protocol.Donator Don {
      get { return don_; }
      set {
        don_ = value;
      }
    }

    /// <summary>Field number for the "suma" field.</summary>
    public const int SumaFieldNumber = 4;
    private int suma_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Suma {
      get { return suma_; }
      set {
        suma_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Donatie);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Donatie other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Caz, other.Caz)) return false;
      if (!object.Equals(Don, other.Don)) return false;
      if (Suma != other.Suma) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (caz_ != null) hash ^= Caz.GetHashCode();
      if (don_ != null) hash ^= Don.GetHashCode();
      if (Suma != 0) hash ^= Suma.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (caz_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Caz);
      }
      if (don_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Don);
      }
      if (Suma != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Suma);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (caz_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Caz);
      }
      if (don_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Don);
      }
      if (Suma != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Suma);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Donatie other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.caz_ != null) {
        if (caz_ == null) {
          caz_ = new global::Chat.Protocol.CazCaritabil();
        }
        Caz.MergeFrom(other.Caz);
      }
      if (other.don_ != null) {
        if (don_ == null) {
          don_ = new global::Chat.Protocol.Donator();
        }
        Don.MergeFrom(other.Don);
      }
      if (other.Suma != 0) {
        Suma = other.Suma;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            if (caz_ == null) {
              caz_ = new global::Chat.Protocol.CazCaritabil();
            }
            input.ReadMessage(caz_);
            break;
          }
          case 26: {
            if (don_ == null) {
              don_ = new global::Chat.Protocol.Donator();
            }
            input.ReadMessage(don_);
            break;
          }
          case 32: {
            Suma = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChatRequest : pb::IMessage<ChatRequest> {
    private static readonly pb::MessageParser<ChatRequest> _parser = new pb::MessageParser<ChatRequest>(() => new ChatRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chat.Protocol.ChatProtocolV3Reflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatRequest(ChatRequest other) : this() {
      type_ = other.type_;
      voluntar_ = other.voluntar_.Clone();
      donatie_ = other.donatie_ != null ? other.donatie_.Clone() : null;
      donator_ = other.donator_ != null ? other.donator_.Clone() : null;
      text_ = other.text_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatRequest Clone() {
      return new ChatRequest(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Chat.Protocol.ChatRequest.Types.Type type_ = 0;
    /// <summary>
    /// Identifies which request is filled in.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Chat.Protocol.ChatRequest.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "voluntar" field.</summary>
    public const int VoluntarFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Chat.Protocol.Voluntar> _repeated_voluntar_codec
        = pb::FieldCodec.ForMessage(18, global::Chat.Protocol.Voluntar.Parser);
    private readonly pbc::RepeatedField<global::Chat.Protocol.Voluntar> voluntar_ = new pbc::RepeatedField<global::Chat.Protocol.Voluntar>();
    /// <summary>
    /// One of the following will be filled in, depending on the type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Chat.Protocol.Voluntar> Voluntar {
      get { return voluntar_; }
    }

    /// <summary>Field number for the "donatie" field.</summary>
    public const int DonatieFieldNumber = 3;
    private global::Chat.Protocol.Donatie donatie_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Chat.Protocol.Donatie Donatie {
      get { return donatie_; }
      set {
        donatie_ = value;
      }
    }

    /// <summary>Field number for the "donator" field.</summary>
    public const int DonatorFieldNumber = 4;
    private global::Chat.Protocol.Donator donator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Chat.Protocol.Donator Donator {
      get { return donator_; }
      set {
        donator_ = value;
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 5;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if(!voluntar_.Equals(other.voluntar_)) return false;
      if (!object.Equals(Donatie, other.Donatie)) return false;
      if (!object.Equals(Donator, other.Donator)) return false;
      if (Text != other.Text) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      hash ^= voluntar_.GetHashCode();
      if (donatie_ != null) hash ^= Donatie.GetHashCode();
      if (donator_ != null) hash ^= Donator.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      voluntar_.WriteTo(output, _repeated_voluntar_codec);
      if (donatie_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Donatie);
      }
      if (donator_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Donator);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      size += voluntar_.CalculateSize(_repeated_voluntar_codec);
      if (donatie_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Donatie);
      }
      if (donator_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Donator);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatRequest other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      voluntar_.Add(other.voluntar_);
      if (other.donatie_ != null) {
        if (donatie_ == null) {
          donatie_ = new global::Chat.Protocol.Donatie();
        }
        Donatie.MergeFrom(other.Donatie);
      }
      if (other.donator_ != null) {
        if (donator_ == null) {
          donator_ = new global::Chat.Protocol.Donator();
        }
        Donator.MergeFrom(other.Donator);
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            type_ = (global::Chat.Protocol.ChatRequest.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            voluntar_.AddEntriesFrom(input, _repeated_voluntar_codec);
            break;
          }
          case 26: {
            if (donatie_ == null) {
              donatie_ = new global::Chat.Protocol.Donatie();
            }
            input.ReadMessage(donatie_);
            break;
          }
          case 34: {
            if (donator_ == null) {
              donator_ = new global::Chat.Protocol.Donator();
            }
            input.ReadMessage(donator_);
            break;
          }
          case 42: {
            Text = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ChatRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// LOGIN, LOGOUT, GET_CAZURI ,GET_DONATORI, SEARCH_DONATOR, GET_DATE_DON,
      ///    SAVE_DON, SAVE_DONATIE, NEW_DONATIE, GET_VOL
      /// </summary>
      public enum Type {
        [pbr::OriginalName("Unkown")] Unkown = 0,
        [pbr::OriginalName("Login")] Login = 1,
        [pbr::OriginalName("Logout")] Logout = 2,
        [pbr::OriginalName("GetCazuri")] GetCazuri = 3,
        [pbr::OriginalName("GetDonatori")] GetDonatori = 4,
        [pbr::OriginalName("SearchDonator")] SearchDonator = 5,
        [pbr::OriginalName("GetDateDonator")] GetDateDonator = 6,
        [pbr::OriginalName("SaveDonator")] SaveDonator = 7,
        [pbr::OriginalName("SaveDonatie")] SaveDonatie = 8,
        [pbr::OriginalName("Refresh")] Refresh = 9,
      }

    }
    #endregion

  }

  public sealed partial class ChatResponse : pb::IMessage<ChatResponse> {
    private static readonly pb::MessageParser<ChatResponse> _parser = new pb::MessageParser<ChatResponse>(() => new ChatResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chat.Protocol.ChatProtocolV3Reflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatResponse(ChatResponse other) : this() {
      type_ = other.type_;
      error_ = other.error_;
      voluntar_ = other.voluntar_.Clone();
      donator_ = other.donator_.Clone();
      donatie_ = other.donatie_ != null ? other.donatie_.Clone() : null;
      cazuri_ = other.cazuri_.Clone();
      text_ = other.text_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatResponse Clone() {
      return new ChatResponse(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Chat.Protocol.ChatResponse.Types.Type type_ = 0;
    /// <summary>
    /// Identifies which request is filled in.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Chat.Protocol.ChatResponse.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    private string error_ = "";
    /// <summary>
    /// One of the following will be filled in, depending on the type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Error {
      get { return error_; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "voluntar" field.</summary>
    public const int VoluntarFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Chat.Protocol.Voluntar> _repeated_voluntar_codec
        = pb::FieldCodec.ForMessage(26, global::Chat.Protocol.Voluntar.Parser);
    private readonly pbc::RepeatedField<global::Chat.Protocol.Voluntar> voluntar_ = new pbc::RepeatedField<global::Chat.Protocol.Voluntar>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Chat.Protocol.Voluntar> Voluntar {
      get { return voluntar_; }
    }

    /// <summary>Field number for the "donator" field.</summary>
    public const int DonatorFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Chat.Protocol.Donator> _repeated_donator_codec
        = pb::FieldCodec.ForMessage(34, global::Chat.Protocol.Donator.Parser);
    private readonly pbc::RepeatedField<global::Chat.Protocol.Donator> donator_ = new pbc::RepeatedField<global::Chat.Protocol.Donator>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Chat.Protocol.Donator> Donator {
      get { return donator_; }
    }

    /// <summary>Field number for the "donatie" field.</summary>
    public const int DonatieFieldNumber = 5;
    private global::Chat.Protocol.Donatie donatie_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Chat.Protocol.Donatie Donatie {
      get { return donatie_; }
      set {
        donatie_ = value;
      }
    }

    /// <summary>Field number for the "cazuri" field.</summary>
    public const int CazuriFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Chat.Protocol.CazCaritabil> _repeated_cazuri_codec
        = pb::FieldCodec.ForMessage(50, global::Chat.Protocol.CazCaritabil.Parser);
    private readonly pbc::RepeatedField<global::Chat.Protocol.CazCaritabil> cazuri_ = new pbc::RepeatedField<global::Chat.Protocol.CazCaritabil>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Chat.Protocol.CazCaritabil> Cazuri {
      get { return cazuri_; }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 7;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Error != other.Error) return false;
      if(!voluntar_.Equals(other.voluntar_)) return false;
      if(!donator_.Equals(other.donator_)) return false;
      if (!object.Equals(Donatie, other.Donatie)) return false;
      if(!cazuri_.Equals(other.cazuri_)) return false;
      if (Text != other.Text) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Error.Length != 0) hash ^= Error.GetHashCode();
      hash ^= voluntar_.GetHashCode();
      hash ^= donator_.GetHashCode();
      if (donatie_ != null) hash ^= Donatie.GetHashCode();
      hash ^= cazuri_.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Error);
      }
      voluntar_.WriteTo(output, _repeated_voluntar_codec);
      donator_.WriteTo(output, _repeated_donator_codec);
      if (donatie_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Donatie);
      }
      cazuri_.WriteTo(output, _repeated_cazuri_codec);
      if (Text.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Error.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      size += voluntar_.CalculateSize(_repeated_voluntar_codec);
      size += donator_.CalculateSize(_repeated_donator_codec);
      if (donatie_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Donatie);
      }
      size += cazuri_.CalculateSize(_repeated_cazuri_codec);
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatResponse other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Error.Length != 0) {
        Error = other.Error;
      }
      voluntar_.Add(other.voluntar_);
      donator_.Add(other.donator_);
      if (other.donatie_ != null) {
        if (donatie_ == null) {
          donatie_ = new global::Chat.Protocol.Donatie();
        }
        Donatie.MergeFrom(other.Donatie);
      }
      cazuri_.Add(other.cazuri_);
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            type_ = (global::Chat.Protocol.ChatResponse.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            Error = input.ReadString();
            break;
          }
          case 26: {
            voluntar_.AddEntriesFrom(input, _repeated_voluntar_codec);
            break;
          }
          case 34: {
            donator_.AddEntriesFrom(input, _repeated_donator_codec);
            break;
          }
          case 42: {
            if (donatie_ == null) {
              donatie_ = new global::Chat.Protocol.Donatie();
            }
            input.ReadMessage(donatie_);
            break;
          }
          case 50: {
            cazuri_.AddEntriesFrom(input, _repeated_cazuri_codec);
            break;
          }
          case 58: {
            Text = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ChatResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      ///  OK, ERROR, UPDATE, NEW_DONATIE, NEW_DONATOR, REFRESH, GET_CAZURI, GET_DONATORI,
      ///    GET_DONATOR, GET_DONATOR_NUME,LOGOUT, SAVE_DONATOR
      /// </summary>
      public enum Type {
        [pbr::OriginalName("Unknown")] Unknown = 0,
        [pbr::OriginalName("Ok")] Ok = 1,
        [pbr::OriginalName("Error")] Error = 2,
        [pbr::OriginalName("Update")] Update = 3,
        [pbr::OriginalName("NewDonatie")] NewDonatie = 4,
        [pbr::OriginalName("NewDonator")] NewDonator = 5,
        [pbr::OriginalName("Refresh")] Refresh = 6,
        [pbr::OriginalName("GetCazuri")] GetCazuri = 7,
        [pbr::OriginalName("GetDonatori")] GetDonatori = 8,
        [pbr::OriginalName("GetDonator")] GetDonator = 9,
        [pbr::OriginalName("GetNumeDon")] GetNumeDon = 10,
        [pbr::OriginalName("Logout")] Logout = 11,
        [pbr::OriginalName("SaveDonator")] SaveDonator = 12,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
